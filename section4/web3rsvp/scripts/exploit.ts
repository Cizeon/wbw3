import hre from "hardhat";

const main = async () => {
  const rsvpContractFactory = await hre.ethers.getContractFactory("Web3RSVP");
  const rsvpContract = await rsvpContractFactory.deploy();
  await rsvpContract.deployed();
  console.log("Contract deployed to:", rsvpContract.address);

  const [owner, account1, account2] = await hre.ethers.getSigners();

  console.log(`Account1 balance before registering: ${hre.ethers.utils.formatEther(await account1.getBalance())}`);

  /* Creating the event */
  const maxCapacity = 3;
  const timestamp = 1718926200;
  const eventDataCID = "bafybeibhwfzx6oo5rymsxmkdxpmkfwyvbjrrwcl7cekmbzlupmp5ypkyfi";
  const deposit = hre.ethers.utils.parseEther("1");
  let txn = await rsvpContract.createNewEvent(timestamp, deposit, maxCapacity, eventDataCID);
  let wait = await txn.wait();
  let eventId = wait.events![0].args!.eventID;

  /* Account 1 register to the event */
  await rsvpContract.connect(account1).createNewRSVP(eventId, { value: deposit });
  console.log(`Account1 balance after registering: ${hre.ethers.utils.formatEther(await account1.getBalance())}`);

  /* Event is by the owner overwritten */
  txn = await rsvpContract.createNewEvent(timestamp, deposit, maxCapacity, eventDataCID);
  wait = await txn.wait();
  eventId = wait.events![0].args!.eventID;

  /* Account 1 attends the event */
  /* This fails because confirmedRSVPs was reset.
     Account 1 has lost its deposit forever. */
  await rsvpContract.confirmAttendee(eventId, account1.address);

  console.log(`Account1 balance after confirmation: ${hre.ethers.utils.formatEther(await account1.getBalance())}`);
};

const runMain = async () => {
  try {
    await main();
    process.exit(0);
  } catch (error) {
    console.log(error);
    process.exit(1);
  }
};

runMain();
